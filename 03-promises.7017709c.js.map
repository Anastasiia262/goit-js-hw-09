{"mappings":"AAcaA,SAASC,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nfunction onSubmitCreatePromises(e) {\n  e.preventDefault();\n  const firstDelay = e.currentTarget.elements.delay.value;\n  const stepDelay = e.currentTarget.elements.step.value;\n  const amount = e.currentTarget.elements.amount.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    \n    delay += step;\n  }\n\n  form.reset();\n}\n"],"names":["document","querySelector"],"version":3,"file":"03-promises.7017709c.js.map"}